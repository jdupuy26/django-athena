# Generated by Django 2.1.5 on 2019-02-16 14:34

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('athena_code', '0014_auto_20190210_1020'),
    ]

    operations = [
        migrations.AddField(
            model_name='configuration',
            name='bfield',
            field=models.BooleanField(default=False, help_text='Enable magnetic fields?'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='ccmd',
            field=models.CharField(default=None, help_text='Override for command to used to call C++ compiler', max_length=100),
        ),
        migrations.AddField(
            model_name='configuration',
            name='cflag',
            field=models.CharField(default=None, help_text='Addition str of flags to append to compiler/linker call', max_length=100),
        ),
        migrations.AddField(
            model_name='configuration',
            name='cless',
            field=models.BooleanField(default=False, help_text='Enable collisionless solver?'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='cless_only',
            field=models.BooleanField(default=False, help_text='Enable collisionless-only mode?'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='coords',
            field=models.CharField(choices=[('cartesian', 'Cartesian'), ('cylindrical', 'Cylindrical'), ('spherical_polar', 'Spherical Polar'), ('minkowski', 'Minkowski'), ('sinusoidal', 'Sinusoidal'), ('tilted', 'Tilted'), ('schwarzschild', 'Schwarzchild Metric'), ('kerr-schild', 'Kerr-Schild Metric'), ('gr_user', 'GR User Metric')], default='cartesian', help_text='Select a coordinate system', max_length=100),
        ),
        migrations.AddField(
            model_name='configuration',
            name='cxx',
            field=models.CharField(choices=[('g++', 'g++'), ('g++-simd', 'g++-simd'), ('icc', 'icc-debug'), ('cray', 'cray'), ('bgxl', 'bgxl'), ('icc-phi', 'icc-phi'), ('clang++', 'clang++'), ('clang++-simd', 'clang++-simd')], default='g++', help_text='Select C++ compiler', max_length=100),
        ),
        migrations.AddField(
            model_name='configuration',
            name='debug',
            field=models.BooleanField(default=False, help_text='Enable debug mode?'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='dual_energy',
            field=models.BooleanField(default=False, help_text='Enable dual energy?'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='eos',
            field=models.CharField(choices=[('adiabatic', 'Adiabatic'), ('Isothermal', 'Isothermal')], default='adiabatic', help_text='Select an equation of state', max_length=100),
        ),
        migrations.AddField(
            model_name='configuration',
            name='fft',
            field=models.BooleanField(default=False, help_text='Enable fast fourier transform?'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='fftw_path',
            field=models.CharField(default='', help_text='Enter path to FFTW libraries', max_length=100),
        ),
        migrations.AddField(
            model_name='configuration',
            name='float_precision',
            field=models.BooleanField(default=False, help_text='Enable single precision?'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='flux',
            field=models.CharField(choices=[('default', 'Default (depends on other fields)'), ('hlle', 'Hartan, Lax, van Leer, Einfeldt (HLLE)'), ('hllc', 'Hartan, Lax, van Leer, Contact (HLLC)'), ('hlld', 'Hartan, Lax, van Leer, Discontinuities (HLLD)'), ('roe', 'Roe Solver'), ('llf', 'LLF Solver')], default='default', help_text='Select Riemann solver', max_length=100),
        ),
        migrations.AddField(
            model_name='configuration',
            name='fluxcl',
            field=models.CharField(choices=[('hlle', 'Hartan, Lax, van Leer, Einfeldt (HLLE)'), ('roe', 'Roe Solver')], default='roe', help_text='Select Riemann solver for the collisionless variables', max_length=100),
        ),
        migrations.AddField(
            model_name='configuration',
            name='gen_rel',
            field=models.BooleanField(default=False, help_text='Enable general relativity?'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='grav',
            field=models.CharField(choices=[('none', 'No self-gravity'), ('fft', 'Fast Fourier Transform'), ('fft_cyl', 'Fast Fourier Transform in Cylindrical Coords')], default='none', help_text='Select a self-gravity solver.', max_length=100),
        ),
        migrations.AddField(
            model_name='configuration',
            name='hdf5',
            field=models.BooleanField(default=False, help_text='Enable HDF5 Output'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='hdf5_path',
            field=models.CharField(default='', help_text='Enter path to HDF5 libraries', max_length=100),
        ),
        migrations.AddField(
            model_name='configuration',
            name='hdf5double',
            field=models.BooleanField(default=False, help_text='Enable double precision HDF5 output?'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='mpi',
            field=models.BooleanField(default=False, help_text='Enable parallelization with MPI?'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='nghost',
            field=models.IntegerField(default=2, help_text='Enter the number of ghost zones'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='nscalars',
            field=models.IntegerField(default=0, help_text='Enter number of scalars'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='openmp',
            field=models.BooleanField(default=False, help_text='Enable parallelization with OpenMP?'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='shear',
            field=models.BooleanField(default=False, help_text='Enable shearing box?'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='spec_rel',
            field=models.BooleanField(default=False, help_text='Enable special relativity?'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='transforms',
            field=models.BooleanField(default=False, help_text='Enable interface frame transformations for GR?'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='prob',
            field=models.CharField(default='blast.cpp', help_text='Select a problem to configure', max_length=100),
        ),
    ]
